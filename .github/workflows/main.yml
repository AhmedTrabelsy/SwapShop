name: cicd
on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  DOCKERHUB_USERNAME: haithemdridiweb
  DOCKERHUB_TOKEN: dckr_pat_luw2jRJMTYOLursn-YD4Zc0hKWg
  SERVER_IP: 34.199.239.78
  SERVER_USERNAME: haythem
  SERVER_PASSWORD: haythemdsi31

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build and push Discovery Microservice
        uses: docker/build-push-action@v5
        with:
          context: ./BackEnd/SpringBoot/discovery
          file: ./BackEnd/SpringBoot/discovery/Dockerfile
          push: true
          tags: haithemdridiweb/discovery-microservice

      - name: Build and push Gateway Microservice
        uses: docker/build-push-action@v5
        with:
          context: ./BackEnd/SpringBoot/gateway
          file: ./BackEnd/SpringBoot/gateway/Dockerfile
          push: true
          tags: haithemdridiweb/gateway-microservice

      - name: Build and push Category Microservice
        uses: docker/build-push-action@v5
        with:
          context: ./BackEnd/SpringBoot/category
          file: ./BackEnd/SpringBoot/category/Dockerfile
          push: true
          tags: haithemdridiweb/category-microservice

      - name: Build and push Product Microservice
        uses: docker/build-push-action@v5
        with:
          context: ./BackEnd/SpringBoot/product
          file: ./BackEnd/SpringBoot/product/Dockerfile
          push: true
          tags: haithemdridiweb/product-microservice

      - name: Build and push Order Microservice
        uses: docker/build-push-action@v5
        with:
          context: ./BackEnd/SpringBoot/order-service
          file: ./BackEnd/SpringBoot/order-service/Dockerfile
          push: true
          tags: haithemdridiweb/order-microservice

      - name: Build and push Trackshippement Microservice
        uses: docker/build-push-action@v5
        with:
          context: ./BackEnd/SpringBoot/trackshippement
          file: ./BackEnd/SpringBoot/trackshippement/Dockerfile
          push: true
          tags: haithemdridiweb/trackshippement-microservice

      - name: Build and push Wishlist Microservice
        uses: docker/build-push-action@v5
        with:
          context: ./BackEnd/NodeJs/wishlist-service
          file: ./BackEnd/NodeJs/wishlist-service/Dockerfile
          push: true
          tags: haithemdridiweb/wishlist-microservice

      - name: Build and push Auth Microservice
        uses: docker/build-push-action@v5
        with:
          context: ./BackEnd/NodeJs/auth-service
          file: ./BackEnd/NodeJs/auth-service/Dockerfile
          push: true
          tags: haithemdridiweb/auth-microservice

      - name: Build and push News Microservice
        uses: docker/build-push-action@v5
        with:
          context: ./BackEnd/NodeJs/news-service
          file: ./BackEnd/NodeJs/news-service/Dockerfile
          push: true
          tags: haithemdridiweb/news-microservice

      - name: Build and push Notifications Microservice
        uses: docker/build-push-action@v5
        with:
          context: ./BackEnd/NodeJs/notification-service
          file: ./BackEnd/NodeJs/notification-service/Dockerfile
          push: true
          tags: haithemdridiweb/notification-microservice

      - name: Prepare files
        run: |
          mkdir server
          cp docker-compose.yml server/
          cp keycloak.Dockerfile server/

      - name: Upload prepared files to server
        uses: genietim/ftp-action@master
        with:
          host: ${{ env.SERVER_IP }}
          user: ${{ env.SERVER_USERNAME }}
          password: ${{ env.SERVER_PASSWORD }}
          localDir: 'server'

      - name: run ssh commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SERVER_IP }}
          username: ${{ env.SERVER_USERNAME }}
          password: ${{ env.SERVER_PASSWORD }}
          script: |
            sudo docker login  -u ${{ env.DOCKERHUB_USERNAME }} -p  ${{ env.DOCKERHUB_TOKEN }}
            sudo docker pull haithemdridiweb/discovery-microservice:latest
            sudo docker pull haithemdridiweb/gateway-microservice:latest
            sudo docker pull haithemdridiweb/category-microservice:latest
            sudo docker pull haithemdridiweb/product-microservice:latest
            sudo docker pull haithemdridiweb/order-microservice:latest
            sudo docker pull haithemdridiweb/trackshippement-microservice:latest
            sudo docker pull haithemdridiweb/wishlist-microservice:latest
            sudo docker pull haithemdridiweb/auth-microservice:latest
            sudo docker pull haithemdridiweb/news-microservice:latest
            sudo docker pull haithemdridiweb/notification-microservice:latest
            sudo docker compose down
            sudo docker compose up -d
